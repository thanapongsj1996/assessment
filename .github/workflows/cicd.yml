name: CI and CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_run:
    workflows: ["tests"]
    branches: [main]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ==============
  # CI task
  # ==============
  # quality-check:
  #   name: Quality Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #     # If you wish to fail your job when the Quality Gate is red, uncomment the
  #     # following lines. This would typically be used to fail a deployment.
  #     - uses: sonarsource/sonarqube-quality-gate-action@master
  #       timeout-minutes: 5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    # needs: quality-check

    steps:
      - uses: actions/checkout@v3

      - name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile

      - name: Integration test inside Docker-compose cleanup
        run: docker-compose -f docker-compose.test.yml down

      - name: Integration test inside Docker-compose
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from it_tests


      ### PUSH TO DOCKER HUB
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: thanapongsj/go-api:latest,thanapongsj/go-api:${{ github.sha }}

      #### PUSH TO GHCR
      # - name: Login ghcr.io
      #   uses: docker/login-action@v1.8.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #     logout: true

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ env.GITHUB_SHA }}

      # - name: Push to GitHub Container Registry
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     tags: |
      #       ghcr.io/thanapongsj1996/assessment:${{ env.GITHUB_SHA }}
      #     # build on feature branches, push only on main branch
      #     push: ${{ github.ref == 'refs/heads/main' }}

      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
  # ==============
  # CD task
  # ==============
  gitops-versioning:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: thanapongsj1996/devops-argocd
          persist-credentials: false
          fetch-depth: 0
      - name: change image tag
        run: |
          git config --local user.email "admin@github.com"
          git config --local user.name "GitHub Action"
          git checkout main

          # Update the K8s deployment file using yq
          yq eval ".spec.template.spec.containers[0].image |= \"thanapongsj/go-api:${{ github.sha }}\"" -i ./kubernetes/go-api/prod/deployment.yml

          git add kubernetes/go-api/prod/deployment.yml
          git commit -m "ðŸ¤– change docker image version to ${{ github.sha }}"

      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          repository: thanapongsj1996/devops-argocd
          branch: main
